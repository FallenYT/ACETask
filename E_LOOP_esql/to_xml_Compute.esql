

CREATE COMPUTE MODULE to_xml_Compute
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		-- CALL CopyMessageHeaders();
		CALL CopyEntireMessage();
		RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		--SET OutputRoot = InputRoot;
		
		
		
		DECLARE ref REFERENCE TO InputRoot.JSON.Data.data.Item[1];
		DECLARE ref2 REFERENCE TO InputRoot.JSON.Data.included.Item[1];
		
	
		SET OutputRoot.XMLNSC.res.data[1].type = ref.type;
		SET OutputRoot.XMLNSC.res.data[1].id = ref.id;
		
		SET OutputRoot.XMLNSC.res.data[1].attributes.title = ref.attributes.title;
		SET OutputRoot.XMLNSC.res.data[1].attributes.body = ref.attributes.body;
		SET OutputRoot.XMLNSC.res.data[1].attributes.created = ref.attributes.created;
		SET OutputRoot.XMLNSC.res.data[1].attributes.updated = ref.attributes.updated;
		
		SET OutputRoot.XMLNSC.res.data[1].relationships.author.data.id = ref.relationships.author.data.id;
		SET OutputRoot.XMLNSC.res.data[1].relationships.author.data.type = ref.relationships.author.data.type;
		
		
		SET OutputRoot.XMLNSC.res.included[1].type = ref2.type;
		SET OutputRoot.XMLNSC.res.included[1].id = ref2.id;
		SET OutputRoot.XMLNSC.res.included[1].attributes.name = ref2.attributes.name;
		SET OutputRoot.XMLNSC.res.included[1].attributes.age = ref2.attributes.age;
		SET OutputRoot.XMLNSC.res.included[1].attributes.gender = ref2.attributes.gender;
		
		
		
	END;
END MODULE;





















