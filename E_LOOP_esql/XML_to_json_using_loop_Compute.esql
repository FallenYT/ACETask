

CREATE COMPUTE MODULE XML_to_json_using_loop_Compute
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		-- CALL CopyMessageHeaders();
		CALL CopyEntireMessage();
		RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
	
--		  {
--  "Data": {
--    "ResultData": {
--      "MessageArrayTest": [
--        {
--          "Folder": {
--            "FieldA": "Field11Value\\1",
--            "FieldB": "Field12Value\\1"
--          }
--        },
--        {
--          "Folder": {
--            "FieldA": "Field21Value\\2",
--            "FieldB": "Field22Value\\2"
--          }
--        }
--      ]
--    }
--  }
--}


	
DECLARE var REFERENCE TO InputRoot.JSON.Data.Data.ResultData.MessageArrayTest[1];
--DECLARE outp REFERENCE TO OutputRoot.JSON.Data.Data.ResultData.MessageArrayTest[];

DECLARE k INTEGER 1;

FOR i AS var.Item[] DO
	
	SET  OutputRoot.XMLNSC.Data.ResultData.MessageArrayTest.Folder[k].FieldA = i.Folder.FieldA;
	SET  OutputRoot.XMLNSC.Data.ResultData.MessageArrayTest.Folder[k].FieldB =  i.Folder.FieldB;
	
	--SET i = i+1;
	set k = k+1;
	
END FOR;












			
		--SET OutputRoot = InputRoot;
	
	
	END;
END MODULE;
