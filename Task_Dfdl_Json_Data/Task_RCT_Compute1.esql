





CREATE COMPUTE MODULE Task_RCT_Compute1
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		-- CALL CopyMessageHeaders();
		CALL CopyEntireMessage();
		RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		-- SET OutputRoot.JSON.Data.msg = 'exception is occure';
		--
		--
		-- DECLARE b INTEGER;
		--
		--
		-- DECLARE r ROW;
		--
		-- set r.result[]=InputRoot.JSON.Data;
		--
		-- DECLARE v ROW r.result[1];
		--
		--
		-- call add(2,3,b);
		--
		-- DECLARE w INTEGER ;
		-- set w = sub(4 , 2);
		--
		-- call mul (2,4,b);
		--
		-- DECLARE f INTEGER ;
		-- set f= div(4 , 2);

		call mean (5,8);
	END;

	CREATE FUNCTION add (in a INTEGER, in b INTEGER , out c INTEGER)
	BEGIN
		set c=a+b;
	END;

	CREATE FUNCTION sub (in a INTEGER, in b INTEGER) RETURNS INTEGER
	BEGIN
		RETURN a-b;
	END;	


	CREATE PROCEDURE mul (in a INTEGER, in b INTEGER , out c INTEGER)
	BEGIN
		set c = a*b;
	END;

	CREATE PROCEDURE div (in a INTEGER, in b INTEGER ) RETURNS INTEGER
	BEGIN
		RETURN a/b;
	END;

	CREATE FUNCTION mean (in a INTEGER, in b INTEGER )
	BEGIN
		--DECLARE c INTEGER;
		set OutputRoot.JSON.Data.k = a+b;

	END;	


END MODULE;