

CREATE COMPUTE MODULE Create_stst_Compute
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		-- CALL CopyMessageHeaders();
		CALL CopyEntireMessage();
		RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		--SET OutputRoot = InputRoot;
		
		
		--CREATE LASTCHILD OF OutputRoot DOMAIN(JSON);
--	CREATE FIRSTCHILD OF OutputRoot.JSON NAME 'Data';



		
		CREATE FIELD OutputRoot.JSON.Data.name VALUE 'shree';
		CREATE NEXTSIBLING OF OutputRoot.JSON.Data.name NAME 'ADDRESS' VALUE 'address';
		CREATE FIELD OutputRoot.JSON.Data.collage VALUE 'amt';
		CREATE FIELD OutputRoot.JSON.Data.loc  TYPE NameValue VALUE 'amt';
		CREATE FIELD OutputRoot.JSON.Data.pin  TYPE Name VALUE '77854';
		CREATE PREVIOUSSIBLING OF OutputRoot.JSON.Data.loc NAME 'education' VALUE '10th pass';
		
		CREATE FIELD OutputRoot.JSON.Data.data IDENTITY(JSON.Array)data;
		
		
		
--		DECLARE var REFERENCE TO InputRoot.JSON.Data[1];
--		
--		DECLARE I INTEGER 1;
--		WHILE LASTMOVE(var) DO
--			
--			SET OutputRoot.JSON.Data.data.*[I] = InputRoot.JSON.*[I];
--			SET I = I + 1;
--			
--			MOVE var NEXTSIBLING;
--		END WHILE;
--		
		
		--CREATE  FIELD OutputRoot.JSON.Data.do NAMESPACE ;
		
		
		
		
		
	END;
END MODULE;






